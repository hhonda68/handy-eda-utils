#
# EMIPS : Embedding MIPS Microprocessor
#
# Copyright (c) 2012 the handy-eda-utils developer(s).
# Distributed under the MIT License.
# (See accompanying file COPYING or copy at
#  http://www.opensource.org/licenses/mit-license.php.)

`timescale 1ns/1ns
module tb

reg  clk, rst;

w    copwe copre copbusy copexit
w  5 copaddr
w 32 copwdata coprdata

m emips#(12,16):u_dut clk rst copwe copre copaddr copwdata coprdata copbusy
m cop0_print:u_cop    clk rst copwe copre copaddr copwdata coprdata copbusy copexit

l    CYC 10

initial begin :clkgen
  clk = 1'b0;
  #(CYC);
  forever begin
    #(CYC/2);
    clk = 1'b1;
    #(CYC/2);
    clk = 1'b0;
  end
end

initial begin :rstgen
  rst = 1'b1;
  #(CYC*3+CYC/4);
  rst = 1'b0;
end

task write_time;
begin
  $write("%0t: ", $time);
end
endtask

initial begin :finish_on_exit
  $timeformat(-9, 0, "ns", 7);
  #0;
  @copexit;
  write_time;  $display("Simulation complete.");
  #(CYC);
  $finish;
end

initial begin :finish_on_timeout
  #(1000000*CYC);
  write_time;  $display("Simulated 1000000 cycles.");
  $finish;
end

initial begin :dump
  $dumpfile("tb.vcd");
  $dumpvars(0, u_dut);
end

endmodule

module cop0_print
i     clk rst
i     copwe	# COP0 write enable
i     copre     # COP0 read enable
i   5 copaddr	# COP0 address
i  32 copwdata	# COP0 write data
o  32 coprdata	# COP0 read data
o     copbusy	# COP0 busy
o     copexit
a     coprdata = 32'h0
a     copbusy = 1'b0
reg copexit = 1'b0;
always @(posedge clk) begin
  if ((~rst) && copwe) begin
    if (copaddr === 5'd0) begin
      $write("%s", copwdata[7:0]);
    end else if (copaddr === 5'd31) begin
      copexit <= 1'b1;
    end
  end
end
endmodule
