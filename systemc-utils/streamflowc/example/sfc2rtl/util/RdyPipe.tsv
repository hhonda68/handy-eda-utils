#
# Utility modules for StreamFlowC-to-RTL conversion
#
# Copyright (c) 2010 the handy-eda-utils developer(s).
# Distributed under the MIT License.
# (See accompanying file COPYING or copy at
#  http://www.opensource.org/licenses/mit-license.php.)
#
################################################################
#
# Backward Pipeline Register for the Ready signal of a Handshaking Channel
#
module RdyPipe
p   W 1
i   clk rst
i W idata@
o W odata@

w W idata_bak

# state0 : idata_bak is empty
#   assert idata_rdy
#   forward idata_vld to odata_vld
#   forward idata to odata
#   if ((idata_vld & (~odata_rdy)) [at the end of the clock cycle]) {
#     // idata transfer proceeds while odata transfer does not
#     capture idata to idata_bak
#     goto state1
#   } else {
#     // no anomaly between idata and odata channels
#     stay in state0
#   }
# state1 : idata_bak holds a data
#   negate idata_rdy
#   assert odata_vld
#   forward idata_bak to odata
#   if (odata_rdy [at the end of the clock cycle]) {
#     goto state0
#   } else {
#     stay in state1
#   }

w   state0 = idata_rdy
a   odata_vld   = state0 ? idata_vld : 1'b1
a   odata       = state0 ? idata : idata_bak
w   idata_bak_cke = state0 & idata_vld & (~odata_rdy)
w   state_nxt     = state0 ? (idata_vld & (~odata_rdy)) : (~odata_rdy)
w   idata_rdy_nxt = ~state_nxt
w W idata_bak_nxt = idata
m DFFR#(1,1'b1) clk rst idata_rdy_nxt idata_rdy
m DFFE#(W) clk idata_bak_cke idata_bak_nxt idata_bak
endmodule

